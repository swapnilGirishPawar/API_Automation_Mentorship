{
	"info": {
		"_postman_id": "6d14bb41-83d5-4e79-b102-a4e14cacfaef",
		"name": "E-commerce(Automation)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "signup",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"email\": \"swapnilpawar321@gmail.com\",\r\n\t\"password\": \"swapnil@12321\"\r\n}   ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/user/signup",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"console.log(jsonData.accessToken)\r",
							"pm.environment.set(\"token\",jsonData.accessToken)\r",
							"\r",
							"const body = JSON.parse(pm.request.body.raw)\r",
							"console.log (body.email)\r",
							"\r",
							"pm.environment.set(\"NewEmail\", body.email);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"email\": \"swapnilpawar321@gmail.com\",\r\n\t\"password\": \"swapnil@12321\"\r\n}   ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/user/login?Authorization=Bearer {{token}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"user",
						"login"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "Bearer {{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getalluser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"const count = jsonData.count\r",
							"const email1 = pm.environment.get(\"NewEmail\")  //Done\r",
							"console.log(email1)\r",
							"for (var i=0;i<count;i++)\r",
							"{\r",
							"    if (jsonData.users[i].email == email1)\r",
							"    {\r",
							"        pid = jsonData.users[i]._id;\r",
							"        //email = jsonDara.users[i].email;\r",
							"    };\r",
							"};\r",
							"console.log(pid)    \r",
							"pm.environment.set(\"USERID\", pid);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/user",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUserByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/user/{{USERID}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"user",
						"{{USERID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "All_Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/products",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const val = pm.response.json()\r",
							"console.log(val.product._id)\r",
							"pm.environment.set(\"productid\", val.product._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"name\": \"Bluetooth Headphone\",\r\n\t\"price\": 5024\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/products",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_product_ by_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/products/{{productid}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"products",
						"{{productid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update productby id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"name\": \"Bluetooth mini Headphone\",\r\n\t\"price\": 10000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/products/{{productid}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"products",
						"{{productid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete_product_by_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/products/{{productid}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"products",
						"{{productid}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const val = pm.response.json()\r",
							"console.log(val.order._id)\r",
							"\r",
							"pm.environment.set(\"createdOrderId\", val.order._id);\r",
							"pm.environment.set(\"createdProductId\", val.order.product);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"product\": \"621730997a9fc400174c28a9\",\r\n\t\"quantity\": 50\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/orders?Authorization=Bearer {{token}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"orders"
					],
					"query": [
						{
							"key": "Authorization",
							"value": "Bearer {{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get-all-orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (    pm.response.to.have.status(200))\r",
							"    {\r",
							"        pm.test(\"Status code is 200\");\r",
							"        const jsonData = pm.response.json();\r",
							"console.log(jsonData.orders[1]._id)\r",
							"const orderid = jsonData.orders[1]._id\r",
							"\r",
							"pm.environment.set(\"order_id\", orderid);\r",
							"    }\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/orders",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_order_by_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/orders/{{order_id}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"orders",
						"{{order_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete_order_by_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://ecommerceservice.herokuapp.com/orders/{{order_id}}",
					"protocol": "https",
					"host": [
						"ecommerceservice",
						"herokuapp",
						"com"
					],
					"path": [
						"orders",
						"{{order_id}}"
					]
				}
			},
			"response": []
		}
	]
}